import Head from 'next/head'
import Image from 'next/image'
import styles from '@/styles/Common.module.scss'
import Navbar from '@/components/Navbar'
import Button, { ButtonType } from '@/components/Button'
import Divider from '@/components/Divider'
import Footer from '@/components/Footer'
import CheckListItem from '@/components/CheckListItem';
import TextInput from '@/components/TextInput'
import Radio from '@/components/Radio'
import { useEffect, useState } from 'react'
import LocalAPIClient from '@/utils/localApi'
import { useRouter } from 'next/router'

const ITEM_LIST = [
  {
    text: '12 doses - 3x per week',
  },
  {
    text: 'Discreet shipping to your house',
  },
  {
    text: 'FREE online physician consultation',
  },
  {
    text: 'Monthly refills',
  },
  {
    text: '24/7 support',
  },
];

const SUPPORT_ITEMS = [
  {
    text: 'Automatic refills every 30 days.'
  },
  {
    text: 'Cancel anytime. No gimmicks.'
  },
  {
    text: 'Payment does not guarantee a prescription.'
  },
  {
    text: '100% refund if no prescription is written.'
  },
  {
    text: 'Standard shipping 3-7 business days.'
  },
];

export default function Checkout() {
  const router = useRouter();
  const { id } = router.query;
  const [user, setUser]: any = useState(null);
  const [product, setProduct]: any = useState(null);
  const [orderInfo, setOrderInfo] = useState({
    firstName: '',
    lastName: '',
    shippingAddress: '',
    shippingState: '',
    shippingCityName: '',
    shippingZip: '',
    billingAddress: '',
    billingState: '',
    billingCityName: '',
    billingZip: '',
    email: '',
    phone: '',
    creditCardNumber: '',
    expirationDate: '',
    cvv: '',
    product_id: id,
  });
  const [isEditBlock, setIsEditBlock] = useState(0);

  const getData = async () => {
    const _user = await LocalAPIClient.get('/api/user/profile');

    setUser(_user);
    const _product_info = await LocalAPIClient.get('/api/product/product');
    if (id) {
      const _product = _product_info.find((p: any) => p.id === id);
      if (_product) {
        setProduct(_product);
      }
    }
  }

  useEffect(() => {
    getData();
  }, []);

  const handleChangeText = (val: string, key: string) => {
    setOrderInfo({
      ...orderInfo,
      [key]: val,
    });
  };

  const handleSave = async () => {
    if (user) {
      await LocalAPIClient.post('/api/order/order-from-profile', orderInfo);
    } else {
      await LocalAPIClient.post('/api/order/order-and-register', orderInfo);
    }
    router.push('/recommendation');
  };

  const setEditBlock = (blockIndex = 0) => {
    setIsEditBlock(blockIndex);
  }

  return (
    <>
      <Head>
        <title>Uplink Health</title>
        <meta name='description' content='Generated by Uplink Health' />
        <meta name='viewport' content='width=device-width, initial-scale=1' />
        <link rel='icon' href='/favicon.ico' />
      </Head>
      <Navbar />
      <main className={styles.main}>
        <div className={`w-full ${styles.bgWhite}`}>
          <div className='flex px-4 py-4 lg:px-24 lg:py-16 container mx-auto flex-col lg:flex-row md:w-10/12'>
            <div className='flex flex-1 justify-center items-stretch flex-col lg:flex-row'>
              <div className='flex flex-1 bg-white shadow-lg border-gray items-center justify-center p-6 rounded-2xl'>
                <Image
                  src='/imgs/recommendation-sildenafil-bg.png'
                  alt={product?.product_tag ?? 'Uplink Health'}
                  width={600}
                  height={600}
                  className={'rounded-2xl w-fit h-fit mt-4'}
                  priority
                />
              </div>
              <div className='flex flex-1 flex-col mt-4 lg:mt-0 lg:ml-6'>
                <h1 className='text-2xl font-weight-bold leading-tight'>{product?.product_title ?? ''}</h1>
                <Divider className='my-3' />
                {ITEM_LIST.map((item, key) => (
                  <CheckListItem text={item.text} key={'item_' + key} />
                ))}
                <div className='flex justify-between border-t-2 border-t-[#d1e7f0] p-2 mt-2'>
                  <p className='font-weight-600'>Price</p>
                  <p className='font-weight-600'>${product?.product_price ?? '0.00'}</p>
                </div>
                <div className='flex justify-between border-t-2 border-t-[#d1e7f0] p-2 mt-2'>
                  <p className='font-weight-600'>Shipping</p>
                  <p className='font-weight-600'>$0.00</p>
                </div>
                <div className='flex justify-between border-t-2 border-t-[#d1e7f0] p-2 mt-2'>
                  <p className='font-weight-600'>Service Charge including Tax</p>
                  <p className='font-weight-600'>$0.00</p>
                </div>
                <div className='flex justify-between p-2 bg-[#d1e7f0]'>
                  <p className='font-weight-bold text-md'>Grand Total</p>
                  <p className='font-weight-bold text-md'>${product?.product_price ?? '0.00'}</p>
                </div>
                {SUPPORT_ITEMS.map((item, key) => (
                  <CheckListItem text={item.text} key={'support_' + key} />
                ))}

                <p className="font-weight-500 text-gray-600 mt-8">Valid US Government issued ID verification required after checkout.</p>
              </div>
            </div>
          </div>
        </div>
        <div className={`w-full ${styles.bgWhite}`}>
          <div className='flex px-4 py-4 lg:px-24 lg:py-16 container flex-col lg:flex-row md:w-10/12 mx-auto'>
            <div className='flex flex-1 justify-center items-stretch w-full flex-col lg:flex-row'>
              <div className='w-full lg:w-1/2'>
                <div className='rounded-2xl bg-[#eef3f5] p-6'>
                  <div className='flex justify-between items-center'>
                    <h1 className='text-2xl font-weight-bold leading-tight'>1. Shipping Information</h1>
                    <Button title="Edit" containerClassName='mt-1' type={ButtonType.default} onClick={() => setEditBlock(0)} />
                  </div>
                  <Divider className='my-2' />
                  {isEditBlock === 0 && (
                    <div className='mt-4'>
                      <p>Ship To Name: must be your legal name <span>(edit name)</span></p>
                      <div className='flex'>
                        <TextInput label='First Name' id='first_name' handleChange={(val) => handleChangeText(val, 'firstName')} />
                        <TextInput label='Last Name' id='last_name' containerClassName='ml-4' handleChange={(val) => handleChangeText(val, 'lastName')} />
                      </div>
                      <TextInput label='Birthday* (ID verified after checkout)' id='birthday' handleChange={(val) => handleChangeText(val, 'birthday')} />
                      <TextInput label='Phone' id='phone' handleChange={(val) => handleChangeText(val, 'phone')} />
                      <TextInput label='Address' id='address' handleChange={(val) => handleChangeText(val, 'shippingAddress')} />
                      <TextInput label='Address 2' id='address2' />
                      <div className='flex'>
                        <TextInput label='State' id='state' handleChange={(val) => handleChangeText(val, 'shippingState')} />
                        <TextInput label='City' id='city' containerClassName='ml-4' handleChange={(val) => handleChangeText(val, 'shippingCityName')} />
                      </div>
                      <div className='flex w-1/2'>
                        <TextInput label='Zip' id='zip' handleChange={(val) => handleChangeText(val, 'shippingZip')} />
                      </div>
                      <div className='flex w-1/2'>
                        <Radio label='Billing Same As Shipping' id='billing' />
                      </div>
                      <div className='flex items-center justify-center mt-6'>
                        <Button title='Save & Continue' type={ButtonType.redOutline} onClick={() => setEditBlock(1)} />
                      </div>
                    </div>
                  )}
                  {isEditBlock > 0 && (
                    <div className='mt-4'>
                      <p>{orderInfo.firstName} {orderInfo.lastName}</p>
                      <p>{orderInfo.phone}</p>
                      <p>{orderInfo.shippingAddress}</p>
                      <p>{orderInfo.shippingState}</p>
                      <p>{orderInfo.shippingCityName}, {orderInfo.shippingZip}</p>
                    </div>
                  )}
                </div>
              </div>
              <div className='w-full lg:w-1/2 lg:ml-6'>
                <div className='rounded-2xl bg-[#eef3f5] p-6 mt-6 lg:mt-0'>
                  <div className='flex justify-between items-center'>
                    <h1 className='text-2xl font-weight-bold leading-tight'>2. Billing Information</h1>
                    <Button title="Edit" containerClassName='mt-1' type={ButtonType.default} onClick={() => setEditBlock(1)} />
                  </div>
                  <Divider className='my-2' />
                  {isEditBlock === 1 && (
                    <div className='mt-4'>
                      <TextInput label='Address' id='address' handleChange={(val) => handleChangeText(val, 'billingAddress')} />
                      <TextInput label='Address 2' id='address2' />
                      <div className='flex'>
                        <TextInput label='State' id='state' handleChange={(val) => handleChangeText(val, 'billingState')} />
                        <TextInput label='City' id='city' containerClassName='ml-4' handleChange={(val) => handleChangeText(val, 'billingCityName')} />
                      </div>
                      <div className='flex w-1/2'>
                        <TextInput label='Zip' id='zip' handleChange={(val) => handleChangeText(val, 'billingZip')} />
                      </div>
                      <div className='flex items-center justify-center mt-6'>
                        <Button title='Save & Continue' type={ButtonType.redOutline} onClick={() => setEditBlock(2)} />
                      </div>
                    </div>
                  )}

                  {isEditBlock !== 1 && (
                    <div className='mt-4'>
                      <p>{orderInfo.billingAddress}</p>
                      <p>{orderInfo.billingState}</p>
                      <p>{orderInfo.billingCityName}, {orderInfo.billingZip}</p>
                    </div>
                  )}
                </div>
                <div className='rounded-2xl bg-[#eef3f5] p-6 mt-6'>
                  <div className='flex justify-between items-center'>
                    <h1 className='text-2xl font-weight-bold leading-tight'>3. Payment Information</h1>
                    <Button title="Edit" containerClassName='mt-1' type={ButtonType.default} onClick={() => setEditBlock(2)} />
                  </div>
                  <Divider className='my-2' />
                  {isEditBlock === 2 && (
                    <div className='mt-4'>
                      <div className='flex'>
                        <div className='flex flex-4'>
                          <TextInput label='Card number' id='card_number' handleChange={(val) => handleChangeText(val, 'creditCardNumber')} />
                        </div>
                        <div className='flex flex-1'>
                          <TextInput label='Date' id='date' placeholder='MM/YY' containerClassName='ml-4' handleChange={(val) => handleChangeText(val, 'expirationDate')} />
                        </div>
                        <div className='flex flex-1'>
                          <TextInput label='CVC' id='cvc' containerClassName='ml-4' handleChange={(val) => handleChangeText(val, 'cvv')} />
                        </div>
                      </div>
                      <div className='flex items-center justify-center mt-6'>
                        <Button title='Pay Now' type={ButtonType.redOutline} onClick={handleSave} />
                      </div>
                    </div>
                  )}
                </div>
              </div>
            </div>
          </div>
        </div>
        <Footer />
      </main>
    </>
  )
}
