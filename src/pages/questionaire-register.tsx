import Head from 'next/head'
import styles from '@/styles/Common.module.scss'
import Navbar from '@/components/Navbar'
import Footer from '@/components/Footer'
import TextInput from '@/components/TextInput'
import Button, { ButtonType } from '@/components/Button'
import QuestionnaireLayout from '@/layouts/QuestionnaireLayout'
import { useState } from 'react'
import LocalAPIClient from '@/utils/localApi'
import { toast } from 'react-toastify'
import { useRouter } from 'next/router'

export default function QuestionaireRegister() {
    const router = useRouter();
    const [info, setInfo] = useState({
        firstName: '',
        lastName: '',
        dob: '',
    });
    const [errors, setErrors]: any = useState({});

    const handleClick = async () => {
        const res = await LocalAPIClient.post('/api/case/medical-form', info);
        if (res.hasError) {
            setErrors(res.errors);
        } else {
            toast(res.message, {hideProgressBar: true, autoClose: 2000, type: 'success'});
            router.push('/questionaire');
        }
    };

    return (
        <>
            <Head>
                <title>Uplink Health</title>
                <meta name='description' content='Generated by Uplink Health' />
                <meta name='viewport' content='width=device-width, initial-scale=1' />
                <link rel='icon' href='/favicon.ico' />
            </Head>
            <Navbar />
            <main className={styles.main}>
                <QuestionnaireLayout activeStep={2} title={'STEP2: Complete Health Questionnaire'}>
                    <TextInput label='Patient First Name * (As it appears on your ID)' id="first_name" handleChange={(val) => setInfo({...info, firstName: val })} hasError={errors?.firstName} errorMessage={errors?.firstName} />
                    <TextInput label='Patient Last Name * (As it appears on your ID)' handleChange={(val) => setInfo({...info, lastName: val })} hasError={errors?.lastName} errorMessage={errors?.lastName} />
                    <TextInput label='Birthday * (ID verified after checkout)' placeholder='YYYY-MM-DD' handleChange={(val) => setInfo({...info, dob: val })} hasError={errors?.dob} errorMessage={errors?.dob} />
                    <Button title='Next' containerClassName='my-4' type={ButtonType.redOutline} onClick={handleClick} />
                </QuestionnaireLayout>
                <Footer />
            </main>
        </>
    )
}
